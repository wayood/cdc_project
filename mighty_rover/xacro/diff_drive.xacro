<?xml version="1.0"?>
<robot name="mighty1" xmlns:xacro="http://www.ros.org/wiki/xacro">
<property name="M_PI" value="3.14159274"/>
<!--<xacro:arg name="model" default="Diff_Drive"/>
<xacro:include filename="$(find mighty_rover)/xacro/imu_macro.xacro" />-->
<!-- /////////////////////////////////////////////////////////////////-->

<!-- Include materials-->

<material name="Black">
   <color rgba="0.0 0.0 0.0 1.0"/>
</material>

<material name="White">
   <color rgba="1.0 1.0 1.0 1.0"/>
</material>

<!-- /////////////////////////////////////////////////////-->

<!-- constants -->
<xacro:property name="deg_to_rad" value="0.017453"/>
<xacro:property name="PI" value="3.14"/>

<!-- base_link property -->
<xacro:property name="base_link_len" value=".19"/>
<xacro:property name="base_link_width" value=".19"/>
<xacro:property name="base_link_height" value="0.070"/>

<!-- wheel property -->
<xacro:property name="wheel_radius" value="0.055"/>
<xacro:property name="wheel_width" value="0.022"/>
<xacro:property name="wheel_height" value="0.11"/>
<xacro:property name="wheel_mass" value=".2"/>


<!-- /////////////////////////////////////////////////////-->
<xacro:macro name="cylinder_inertia" params ="m r h">
  <inertial>
   <mass value="${m}"/>
   <inertia ixx="${m*(3*r*r+h*h)/12}"  ixy="0.0" ixz="0.0"
            iyy="${m*(3*r*r+h*h)/12}"  iyz= "0.0"
            izz="${m*r*r/2}"/>
   </inertial>
</xacro:macro>

<!-- ///////////////////////////////////////////////////-->

<xacro:macro name= "inertial_matrix" params="mass">
  <inertial>
    <mass value="${mass}"/>
      <inertia ixx="1.0" ixy="0.0"
               iyy="1.0" iyz="0.0"
               izz="1.0" ixz="0.0"/>
   </inertial>
 </xacro:macro>

<!-- ////////////////////////////////////////////////////-->

<!--transmission block-->

<xacro:macro name="Transmission_block" params="joint_name">
   <transmission name="${joint_name}_trans">
    <type>transmission_interface/SimpleTransmission</type>
     <joint name="${joint_name}">
       <hardwareInterface>PositionJointInterface</hardwareInterface>
     </joint>
    <actuator name="${joint_name}_motor">
      <mechanicalReduction>1</mechanicalReduction>
     </actuator>
    </transmission>
 </xacro:macro>

<!-- //////////////////////////////////////////////////// -->

<!-- ////////////////////////////////////////////////////////////-->

<!-- base_link-->

 <link name="base_link">
    <visual>
      <origin rpy="-${PI/2} 0 ${PI/2}" xyz="0 0 0"/>
      <geometry>
         <mesh filename="package://diff_drive/meshes/base assembly.dae"/>
       </geometry>
     </visual>
    <collision>
      <origin rpy="-${PI/2} 0 0" xyz="0 0 0"/>
      <geometry>
          <mesh filename="package://diff_drive/meshes/base assembly.dae"/>
      </geometry>
    </collision>
   <xacro:inertial_matrix mass="5.0"/>
 </link>

 <gazebo reference="base_link">
    <turnGravityOff>false</turnGravityOff>
  </gazebo>
<!-- ///////////////////      Wheels      ///////////////////////   -->

<xacro:macro name="wheel" params= "prefix suffix X Y Z">
  <link name= "${prefix}_${suffix}_wheel">
    <visual>
     <origin rpy= "${PI/2} 0 0" xyz= "0 0 0"/>
     <geometry><cylinder length="${wheel_width}" radius= "${wheel_radius/5}"/></geometry>
     <material name= "Black"/>
    </visual>
    <collision>
     <origin rpy= "${PI/2} 0 0" xyz= "0 0 0"/>
     <geometry><cylinder length="${wheel_width}" radius= "${wheel_radius/5}"/></geometry>
    </collision>
  <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius/3}" h="${wheel_width}"/>
  </link>
  


 <link name= "${prefix}_${suffix}_wheel1">
    <visual>
     <origin rpy= "0  ${PI/2} 0" xyz= "0 0 0"/>
     <geometry><mesh filename="package://diff_drive/meshes/tyre11.dae"/></geometry>
     <material name= "Black"/>
    </visual>
    <collision>
     <origin rpy= "0 ${PI/2} 0" xyz= "0 0 0"/>
     <geometry><mesh filename="package://diff_drive/meshes/tyre11.dae"/></geometry>
    </collision>
  <xacro:cylinder_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}"/>
  </link>
      
  <gazebo reference ="${prefix}_${suffix}_wheel1">
     <material>Gazebo/Black</material>
     <turnGravityOff>false</turnGravityOff>
  </gazebo> 

  <joint name="${prefix}_${suffix}_wheel_joint1" type= "fixed">
    <parent link="${prefix}_${suffix}_wheel"/>
    <child link= "${prefix}_${suffix}_wheel1"/>
    <origin xyz="0 0 0"  rpy="0 0 0"/>
  </joint>



<gazebo reference ="${prefix}_${suffix}_wheel">
    <mu1 value="200.0"/>
    <mu2 value="100.0"/>
    <kp value="10000000.0"/>
    <kd value= "1.0"/>
    <material>Gazebo/Black</material>
</gazebo>

<joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
  <parent link= "base_link"/>
  <child link= "${prefix}_${suffix}_wheel"/>
  <origin xyz= "${0.062*X-0.058*Y} ${(base_link_len/2+0.02)*Z}  0.015" rpy="0 0 0"/>
  <axis xyz="0 1 0"/>
  <limit effort= "100" velocity="100"/>
  <dynamics damping="0.0" friction="0.0"/>  
</joint>

--

--

--

 <transmission name="${prefix}_${suffix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_${suffix}_wheel_motor">
        <hardwareInterface>EffortJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_${suffix}_wheel_joint">
        <hardwareInterface>VelocityJointInterface</hardwareInterface>
      </joint>
 </transmission>
</xacro:macro>

<!--<xacro:macro name="body"parent="base_link" />
<xacro:wheel prefix="right" suffix="front" parent="base_link" X="1" Y="0" Z="-1"/>
<xacro:wheel prefix="right" suffix="back" parent="base_link" X="0" Y="1" Z="-1"/>
<xacro:wheel prefix="left" suffix="front" parent="base_link" X="1" Y="0" Z="1"/>
<xacro:wheel prefix="left" suffix="back" parent="base_link" X="0" Y="1" Z="1"/>-->

<xacro:wheel prefix="right" suffix="front" X="1" Y="0" Z="-1"/>
<xacro:wheel prefix="right" suffix="back" X="0" Y="1" Z="-1"/>
<xacro:wheel prefix="left" suffix="front" X="1" Y="0" Z="1"/>
<xacro:wheel prefix="left" suffix="back" X="0" Y="1" Z="1"/>

<!--///////////////////////////////////////////////////////////////// -->

<joint name="imu_joint" type="fixed">
      <parent link="base_link"/>
      <child  link="imu_link"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
    </joint>
    <link name="imu_link"/>
    <gazebo reference="imu_link">
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <topic>data</topic>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>imu/data</topicName>
          <bodyName>imu_link</bodyName>
          <updateRateHZ>10.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>mighty1/imu_link</frameName>
        </plugin>
        <pose>0 0 0 0 0 0</pose>
      </sensor>
    </gazebo>


<!--<link name="hokuyo_sensor">
  <visual>
    <origin xyz="0 0 0" rpy="0 0 0"/>
   <geometry>
     <box size="0.05 0.05 0.05"/>
   </geometry>
   <material name="Blue"/>
   </visual>
 </link>

<joint name="hokuyo_joint" type="fixed">
  <origin xyz="0.07 0 0.08" rpy="0 0 0"/>
  <parent link="base_link"/>
  <child link="hokuyo_sensor"/>
</joint>

<gazebo reference="hokuyo_sensor">
  <material>Gazebo/Blue</material>
  <turnGravityOff>false</turnGravityOff>
  <sensor type="ray" name="base_link_hokuyo_sensor">
   <pose>0.025 0 0 0 0 0</pose>
   <visualize>false</visualize>
   <update_rate>40</update_rate>
   <ray>
     <scan>
       <horizontal>
         <samples>720</samples>
         <resolution>1</resolution>
         <min_angle>-1.57</min_angle>
         <max_angle>1.57</max_angle>  
        </horizontal>
      </scan>
     <range>
        <min>0.10</min>
        <max>10.0</max>
        <resolution>0.001</resolution>
      </range>
     </ray>
     <plugin name="gazebo_ros_head_hokuyo_controller" 
          filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>hokuyo_sensor</frameName>
       </plugin>
      </sensor>
     </gazebo>   -->

<link name="hokuyo_sensor">
<collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://rrbot_description/meshes/hokuyo.dae"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    </link>

<joint name="hokuyo_joint" type="fixed">
      <parent link="base_link"/>
      <child  link="hokuyo_sensor"/>
      <origin xyz="0.02 0 0.13" rpy="0 0 0"/>
    </joint>


<gazebo reference="hokuyo_sensor">
    <sensor type="gpu_ray" name="base_link_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
         <horizontal>
              <samples>400</samples>
              <resolution>1</resolution>
              <min_angle>${radians(-150)}</min_angle>
              <max_angle>${radians( 150)}</max_angle>-->
            <!--<min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>-->
         </horizontal>
        
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lidar_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/scan</topicName>
        <frameName>hokuyo_sensor</frameName>
      </plugin>
    </sensor>
    </gazebo>



<!-- //////////////////////////////////////////////////////////////// -->

<!-- ros_control plugin-->

<gazebo>
  <plugin name="gazebo_ros_control" filename= "libgazebo_ros_control.so">
   <robotNamespace>/</robotNamespace>
  </plugin>
</gazebo>

<link name="camera_link">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
       
         <mesh filename="package://openni_description/mesh/kinect.dae"/>
      </geometry>
     
    </visual>
    <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0"/>
  	    <geometry>
  	      <box size="0.07271 0.27794 0.073"/>
  	    </geometry>
  	  </collision>
  </link>

  <joint name="camera_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 ${M_PI/2}"/>
    <parent link="base_link"/>
    <child link="camera_link"/>
  </joint>

<gazebo reference="camera_link">  
      <sensor type="depth" name="camera">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>20.0</update_rate>
        <camera>
          <horizontal_fov>${60.0*M_PI/180.0}</horizontal_fov>
          <image>
            <format>B8G8R8</format>
            <width>640</width>
            <height>480</height>
          </image>
          <clip>
            <near>0.05</near>
            <far>8.0</far>
          </clip>
        </camera>

        <plugin name="kinect_camera_controller" filename="libgazebo_ros_openni_kinect.so">
          <cameraName>camera</cameraName>
          <alwaysOn>true</alwaysOn>
          <updateRate>10</updateRate>
          <imageTopicName>rgb/image_raw</imageTopicName>
          <depthImageTopicName>depth/image_raw</depthImageTopicName>
          <pointCloudTopicName>depth/points</pointCloudTopicName>
          <cameraInfoTopicName>rgb/camera_info</cameraInfoTopicName>
          <depthImageCameraInfoTopicName>depth/camera_info</depthImageCameraInfoTopicName>
          <frameName>camera_link</frameName>
          <baseline>0.1</baseline>
          <distortion_k1>0.0</distortion_k1>
          <distortion_k2>0.0</distortion_k2>
          <distortion_k3>0.0</distortion_k3>
          <distortion_t1>0.0</distortion_t1>
          <distortion_t2>0.0</distortion_t2>
          <pointCloudCutoff>0.4</pointCloudCutoff>
        </plugin>
      </sensor>
    </gazebo>

</robot>
