<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!--arg name="x_pos" default="5.570310"/>
  <arg name="y_pos" default="-4.452940"/>
  <arg name="z_pos" default="0.189504"/-->

  <!---3.19301 -4.15288 0.189505-->
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="1.0" />
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="model" default="$(find cdc_navigation)/xacro/pf1.xacro"/>
  <!-- We resume the logic in empty_world.launch -->

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
  <arg name="world_name" value="$(find cdc_navigation)/worlds/cdc_base.world"/>
    <!-- <arg name="world_name" value="$(find cdc_navigation)/worlds/pf1_base.world"/> -->
    <arg name="debug" value="false" />
    <arg name="gui" value="true" />
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="headless" value="false"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->

  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)"/>
  <!-- <param name="robot_description" textfile="pf1.xacro" />
   <arg name="gui" default="False" />
   <param name="use_gui" value="$(arg gui)"/>-->
   
   <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/> -->
   <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/> -->
   <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" /> -->
   <!--<node name="rviz" pkg="rviz" type="rviz" /> -->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-unpause -urdf -model PF1 -param robot_description
          -x $(arg x) -y $(arg y) -z $(arg z)
          -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

  <!-- <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="diff_drive_controller" /> -->
  <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/> -->
</launch>
